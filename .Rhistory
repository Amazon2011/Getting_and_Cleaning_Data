getwd()
file.exists(""F:/GitHub/Getting_and_Cleaning_Data"")
file.exists(F:/GitHub/Getting_and_Cleaning_Data")
file.exists(F:\\GitHub\\Getting_and_Cleaning_Data")
file.exists("F:/GitHub/Getting_and_Cleaning_Data")
library(XML)
xml
library("XML")
library(XML)
?xmlTreeParse
??xmlTreeParse
install.packages("XML")
q()
install.packages("XML")
library(XML)
fileUrl <- "http://www.w3school.com.cn/example/xmle/note.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
xmlElementsByTagName(doc)
xmlName(xmlNode(doc))
xmlNode(doc)
xmlDoc(xmlNode(doc))
xmlValue(xmlNode(doc))
rootNode[[1]]
rootNode[1]
rootNode[[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNOde, "//to", xmlValue)
xpathSApply(rootNode, "//to", xmlValue)
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
names(jsonData$owner)
jsonData$owner$login
myjson <- toJSON(iris, pretty=TRUE)
cat(myjson)
iris2 <- fromJSON(myjson)
head(iris2)
head(fromJSON(jsonData))
head(fromJSON(jsonData))
cat(jsonData)
myjson <- toJSON(iris, pretty=TRUE)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
head(jsonData)
library(data.table)
install.packages("data.table")
library(data.table)
DT = data.table(x = rnorm(9), y = rep(c("a",  "b", "c"), each = 3), z = rnorm(9))
DT
DT <- data.table(x = rnorm(9), y = rep(c("a",  "b", "c"), each = 3), z = rnorm(9))
DT
head(DT, 3)
tables()
DT[2, ]
DT[DT$y="a"]
DT[DT$y="a",]
DT[DT$y=="a",]
DT(c(2, 3))
DT[c(2, 3)]
DT[c(2, 3),]
DT[c(2, 3),c(2,3)]
DT[,c(2,3)]
DT[,1]
DT$1
DT1 <- data.table(x = c('a', 'a', 'b', 'dt1'), y = 1:4)
DT2 <- data.table(x = c('a', 'b', 'dt2'),z = 5:7)
setkey(DT1, x)
setkey(DT2, x)
merge(DT1, DT2)
DT2 <- data.table(x = c('a', 'a', 'dt2'),z = 5:7)
setkey(DT1, x)
setkey(DT2, x)
merge(DT1, DT2)
dt
DT
DT[,list(x)]
DT[,x]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file(url, destfile = "2006_microdata_suvey")
download.file(url, destfile = "2006_microdata_suvey.csv")
microdataSuvey <- read.table("2006_microdata_survey.csv", header = TRUE)
head(microdataSuvey)
nrows(microdataSuvey)
microdataSuvey <- NULL
microdataSurvey <- read.table("2006_microdata_survey.csv", header = TRUE)
table(microdataSurvey$VAL)
table(microdataSurvey[,1])
table(microdataSurvey$VAL)
nrow(microdataSuvey)
nrow(microdataSurvey)
nrow(microdataSurvey$VAL)
nrow(microdataSurvey$val)
microdataSurvey$val
microdataSurvey$VAL
microdataSurvey$30
microdataSurvey[,30]
microdataSurvey[,30]
microdataSurvey
header(microdataSurvey)
class(microdataSurvey)
?header
names(microdataSurvey)
data.frame(x = rnorm(2), y = 1:2)
z <- data.frame(x = rnorm(2), y = 1:2)
names(z)
microdataSurvey <- read.table("2006_microdata_survey.csv", header = TRUE)
names(microdataSurvey)
microdataSurvey <- read.csv("2006_microdata_survey.csv", header = TRUE)
names(microdataSurvey)
table(microdataSurvey$VAL)
table(microdataSurvey[, microdataSurvey$VAL == 24])
microdataSurvey[, microdataSurvey$VAL == 24]
microdataSurvey[, microdataSurvey$VAL == "24"]
x <- microdataSurvey$VAL
x[x==24]
x
x[x == "24"]
x[x == "24", na.rm = TRUE]
x[x == "24", rm.na = TRUE]
nrow(x)
length(x)
length(x, rm.na = TRUE)
length(x == 24)
length(x == "24")
length(x[x==24])
length(x[x==24 && !is.na(x)])
length(x[x==24 && is.na(x)])
table(x)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
downlod
download.file(fileUrl, destfile = "gov_NGAP.xlsx")
dateDownloaded <- date()
rowIndex <- 18:23
colIndex <- 7:15
govNGAP <- read.xlsx("gov_NGAP.xlsx", sheetIndex = 1, colIndx = colIndex, rowIndex = rootNode)
library(xlsx)
install.packages("xlsx")
library(xlsx)
govNGAP <- read.xlsx("gov_NGAP.xlsx", sheetIndex = 1, colIndx = colIndex, rowIndex = rootNode)
install.packages("rJava")
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
install.packages("rJava")
library(rjava)
library(rJava)
install.packages("rJava")
library(xlsx)
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
govNGAP <- read.xlsx("gov_NGAP.xlsx", sheetIndex = 1, colIndx = colIndex, rowIndex = rootNode)
?read.xlsx
download.file(fileUrl, destfile = "gov_NGAP.xlsx")
fileUrl
govNGAP <- read.xlsx("gov_NGAP.xlsx", sheetIndex = 1, colIndx = colIndex, rowIndex = rootNode)
library(xlsx)
govNGAP <- read.xlsx("gov_NGAP.xlsx", sheetIndex = 1, colIndx = colIndex, rowIndex = rootNode)
govNGAP <- read.xlsx("gov_NGAP.xlsx", sheetIndex = 1, colIndex = colIndex, rowIndex = rootNode)
colIndex
govNGAP <- read.xlsx("gov_NGAP.xlsx", sheetIndex = 1, colIndex = colIndex, rowIndex = rowIndex)
govNGAP
rename(govNGAP, dat)
dat <- govNGAP
sum(dat$Zip*dat$Ext,na.rm=T)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc <- xmlTreeParse(url, useInternal = TRUE)
doc <- xmlTreeParse(url)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url, "2006_microdata_survey_Idaho_state.csv")
?fread
DT <- read.csv("2006_microdata_survey_Idaho_state.csv", header = TRUE)
head(DT)
library(swirl)
install_course_zip("D:/Study/swirl_courses/swirl_courses-master.zip", multi=TRUE,
which_course="Getting_and_Cleaning_Data")
swirl()
library(RMySQL)
hg19 <- dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
appyData <- dbReadTable(hg19, "affyU133Plus2")
head(appyData)
source("http://bioconductor.org/biocLite.R")
biocLite(rhdf5)
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
h5ls("example.h5")
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A = matrix(1:10, nr=5, nc=2)
h5write(A, "example.h5", "foo/A")
B = array(seq(0.1, 2.0, by=0.1), dim=c(5,2,2))
h5write(B, "example.h5", "foo/foobaa/B")
h5ls("example.h5")
h5read("example.h5", "foo/A")
con= url("http://scholar.google.com/citations?user=HI-I6C0AAAA&hl=en")
htmlcode = readLines(con
)
fakeData = rnorm(1e5)
object.size(fakeData)
print(object.size(fakeData),units="Mb")
getwd()
dir
dir.create("Data")
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
fileUrl
download.file(fileUrl, destfile="./data/cameras.csv", method="curl")
library(XML)
fileUrl <- "http:/www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInteral = TRUE)
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
fileUrl <- "http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl, useInternal=T)
doc
scores <- xpathSApplay(doc,"//li[@class='score']",xmlValue)
scores <- xpathSApply(doc,"//li[@class='score']",xmlValue)
scores
teams <- xpathSApplay(doc,"//li[@class='team-name']", xmlvALUE)
teams <- xpathSApplay(doc,"//li[@class='team-name']", xmlValue)
teams <- xpathSApply(doc,"//li[@class='team-name']", xmlValue)
doc
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
names(jsonData$owner)
names(jsonData$id)
jsonData$owner
jsonData$owner$login
myjson<- toJSON(iris, pretty=T)
cat(myjson)
iris2 <- fromJSON(myjson)
head(iris2)
library(data.table)
DF = data.frame(x = rnorm(9), y=rep(c("a","b","c"), each=3), z=rnorm(9))
head(DF,3)
DT = data.table(x = rnorm(9), y=rep(c("a","b","c"), each=3), z=rnorm(9))
head(DT,3)
tables()
DT[2, ]
DT[DT$y=="a",]
DT[c(2, 3)]
DT[,list(mean(x), sum(z))]
DT[,mean(x)]
DT[,table(y)]
DT[,w:=z^2]
DT
DT[,m:={tmp<- (x+z); log2(tmp+5)}]
DT
set.seed(123)
DT <- data.table(x=sample(letters[1:3], 1E5, TRUE))
DT
nrows(DT)
DT[,.N]
DT[,.N, by=x]
DT <- data.table(x=rep(c("a", "b", "c"), each=100), y=rnorm(300))
head(DT)
setkey(DT, X)
setkey(DT, x)
DT['a']
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./data/2006_microdata_survey_about_housing_Idaho.csv")
x <- read.csv("./data/2006_microdata_survey_about_housing_Idaho.csv", header = TRUE)
head(x)
x[, x$VAL==24]
x[, x$VAL=="24"]
x[, x$"VAL"=="24"]
x$val
x$VAL
x[, x$VAL="24"]
x[, x$VAL == 11]
Y
x[, 1]
x[x$VAL == 24, ]
x[x$VAL == 24, VAL]
x[x$VAL == 24, "VAL"]
x[x$VAL == 24, "VAL", na.rm = T]
x[x$VAL == 24, "VAL", rm.na = T]
x[x$VAL == 24, "VAL", na.rm = TRE]
x[x$VAL == 24, "VAL", na.rm = TRUE]
length(x[x$VAL == 24, "VAL"])
length(x[x$VAL == 24, "VAL"], na.rm = TRUE)
length(complete.cases(x[x$VAL == 24, "VAL"]))
x[x$VAL == 24, "VAL"]
val24 <- x[x$VAL == 24, "VAL"]
length[val24[!is.na(val24)]]
length(val24[!is.na(val24)])
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download(fileUrl, destfile="./data/gov_NGAP.xlsx", method="curl")
download.file(fileUrl, destfile="./data/gov_NGAP.xlsx", method="curl")
download.file(fileUrl, destfile="./data/gov_NGAP.xlsx")
colIndex <- 7:15
rowIndex <- 18:23
library(xlsx)
govNGAPData <- read.xlsx("./data/gov_NGAP.xlsx", sheetIndex = 1, colIndex = colIndex, rowIndex = rowIndex)
govNGAPData <- read.xlsx("./data/gov_NGAP.xlsx", sheetIndex = 1)
download.file(fileUrl, destfile="./data/gov_NGAP.xlsx")
